#!/usr/bin/env bash
set -euo pipefail

# ===== Required =====
: "${REPO_URL:?Set REPO_URL (https://github.com/org/repo.git)}"
: "${BASE_BRANCH:=main}"
: "${BRANCH_NAME:?Set BRANCH_NAME (head branch)}"
: "${GITHUB_TOKEN:?Set GITHUB_TOKEN}"

# Metadata (used in title/body/labels)
: "${IDP_REQUEST_ID:=local-$(date +%s)}"      # <+pipeline.sequenceId>
: "${PROJECT_NAME:=My App}"                   # <+pipeline.variables.project_name>
: "${PROJECT_SLUG:=my-app}"                   # <+pipeline.variables.project_slug>
: "${OWNER:=your-org}"                        # <+pipeline.variables.owner>
: "${JIRA_KEY:=}"                             # set from JIRA step if available
: "${LABELS:=idp,scaffold,<IDP:${IDP_REQUEST_ID}>}"  # comma-separated
: "${DRAFT:=false}"

have(){ command -v "$1" >/dev/null 2>&1; }
USE_GH=false; if have gh; then USE_GH=true; fi
if ! $USE_GH && ! (have curl && have jq); then
  echo "Need gh OR curl+jq installed"; exit 1
fi

CLEAN_URL="$(echo "$REPO_URL" | sed -E 's#https://([^/]+)/#https://github.com/#' | sed -E 's#\.git$##')"
OWNER_REPO="$(echo "$CLEAN_URL" | sed -E 's#https://github.com/([^/]+/[^.]+)#\1#')"

# Title/body
if [ -n "$JIRA_KEY" ]; then
  TITLE="[${JIRA_KEY}] Add ${PROJECT_NAME} (${PROJECT_SLUG})"
else
  TITLE="Add ${PROJECT_NAME} (${PROJECT_SLUG})"
fi

read -r -d '' BODY <<EOF || true
This PR was generated by Harness IDP.

**Traceability**
- IDP Request: \`${IDP_REQUEST_ID}\`
- Branch: \`${BRANCH_NAME}\`
- Base: \`${BASE_BRANCH}\`
- Owner: \`${OWNER}\`
$( [ -n "$JIRA_KEY" ] && echo "- Jira: \`${JIRA_KEY}\`" )

**Scaffold**
- Project: \`${PROJECT_NAME}\` (\`${PROJECT_SLUG}\`)
- Directory: added under the selected path

> Created automatically; please review.
EOF

# Create PR
PR_URL=""
if $USE_GH; then
  export GH_TOKEN="$GITHUB_TOKEN"
  PR_URL="$(gh pr create --repo "$OWNER_REPO" --base "$BASE_BRANCH" --head "$BRANCH_NAME" \
           --title "$TITLE" --body "$BODY" $($DRAFT && echo --draft || true) | tail -n1)"
  # add labels if provided
  IFS=',' read -r -a arr <<< "$LABELS"
  for l in "${arr[@]}"; do gh pr edit --repo "$OWNER_REPO" "$PR_URL" --add-label "$(echo "$l" | xargs)" >/dev/null 2>&1 || true; done
else
  API="https://api.github.com"
  AUTH=(-H "Authorization: Bearer ${GITHUB_TOKEN}" -H "Accept: application/vnd.github+json")
  data=$(jq -n --arg t "$TITLE" --arg b "$BODY" --arg head "$BRANCH_NAME" --arg base "$BASE_BRANCH" --argjson draft $($DRAFT && echo true || echo false) \
    '{title:$t, body:$b, head:$head, base:$base, draft:$draft}')
  PR_URL="$(curl -sS "${AUTH[@]}" -d "$data" "${API}/repos/${OWNER_REPO}/pulls" | jq -r '.html_url')"
  # labels
  if [ -n "$LABELS" ] && [ "$PR_URL" != "null" ]; then
    number="$(echo "$PR_URL" | sed -E 's#.*/pull/([0-9]+).*#\1#')"
    labels_json="$(printf '%s\n' "$LABELS" | tr ',' '\n' | jq -R . | jq -s .)"
    curl -sS -X POST "${AUTH[@]}" -d "{\"labels\":$labels_json}" \
      "${API}/repos/${OWNER_REPO}/issues/${number}/labels" >/dev/null || true
  fi
fi

[ -n "$PR_URL" ] && [ "$PR_URL" != "null" ] || { echo "PR creation failed"; exit 2; }
echo "âœ… PR: $PR_URL"
